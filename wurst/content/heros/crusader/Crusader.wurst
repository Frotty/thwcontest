package Crusader
import MapStuff
import Fx
import Creep
import Hero
import DummyCaster
import ChannelAbilityPreset
import AbilityObjEditing
import TempGroups
import TimerUtils
import ClosureEvents


int CRUSADER_ID

int BACKOFF_SPELL_ID
int SAFEGUARD_SPELL_ID

int DUMBACKOFF_SPELL_ID

public class Crusader extends Hero
	timer sg_timer //sg stands for SafeGuard spell
	real sg_remaining // Counts back from 6 seconds
	real sg_damage // saves incoming damage for healback
	Hero sg_target
	lightning sg_lighting
	real sg_damagewindow
	
	construct(vec3 pos, player owner )
		super(pos, owner, CRUSADER_ID)
		
	override function onCast(int spellId)
		print("Crusader - onCast function called")
		switch spellId
			case BACKOFF_SPELL_ID
				castBackOff() 
	
	override function onUnitCast(int spellId, unit target)
		print("Crusader - onUnitCast function called")
		switch spellId
			case SAFEGUARD_SPELL_ID
				castSafeGuard(target) 
		
	override function onPointCast(int spellId, vec2 target)
	
	function castBackOff() // Q ability of Crusader. Instant cast.
		//DummyCaster dc = new DummyCaster(DUMBACKOFF_SPELL_ID,"stomp",owner, false) //Create dummy for stun
		//dc.recycleDelay = .5
		//dc.castInPoint(pos.toVec2().polarOffset(actor.getFacingAngle(), 100))
		real abilityrange = 400 //could be dynamic later?
		GroupEnumUnitsInRange(ENUM_GROUP, pos.x,pos.y, abilityrange, Condition(() -> GetFilterUnit().getEntity() instanceof Creep))
		for u from ENUM_GROUP
			print("group loop")
			let c = u.getEntity() castTo Creep
			let angl = pos.angleTo2d(c.pos)
			if (angl - actor.getFacingAngle()).degrees().abs() < 60
				if c.pos.distToVecSquared(pos) < 256*256
					c.addVel(vec3(angl.cos() * 10, angl.sin() * 10, 10)) // Adding the knockback
				//dc.castOnTarget(c.actor)
				//ENUM_GROUP.removeUnit(u) // Will this fuck the for cylce up?
		//dc.castOnGroup(ENUM_GROUP) //Using dummycaster's corresponding function.
		//destroy dc
		
		
	function castSafeGuard(unit target) // E ability of Crusader. Allied hero cast.
		if target.getEntity() instanceof Hero
			Hero hero = target.getEntity() castTo Hero
			if target == actor //Different effect if casted on self.
				print("yuo cheating!")
			else
				print("created")
				sg_target = hero
				sg_lighting = AddLightning("LEAS",true,pos.x,pos.y,hero.pos.x,hero.pos.y)
				SetLightningColor(sg_lighting,1,1,1,1)
				sg_timer = getTimer()
				sg_timer..setData(this castTo int)
					..startPeriodic(0.05,function safeGuard_loop)
	
	static function safeGuard_loop()
		print("looping")
		real sg_range = 500
		Crusader c = GetExpiredTimer().getData() castTo Crusader
		real transparency = min(SquareRoot(c.pos.distToVec2d(c.sg_target.pos)/sg_range),1)
		real coloring = min(1,10/c.sg_damagewindow)
		SetLightningColor(c.sg_lighting,1,coloring,coloring,1-transparency)
		MoveLightning(c.sg_lighting,true,c.pos.x,c.pos.y,c.sg_target.pos.x,c.sg_target.pos.y)
		c.sg_damagewindow = max(c.sg_damagewindow/2-10,1)
		
	function safeGuard_onDamage()
		real damage = 10 //to be set normally
		sg_damage += damage
		sg_damagewindow += damage
		
public function init_Crusader(boolean compiletime)
	CRUSADER_ID = HERO_ID_GEN.next()
	// generate valid id
	BACKOFF_SPELL_ID = ABIL_ID_GEN.next()
	SAFEGUARD_SPELL_ID = ABIL_ID_GEN.next()
	DUMBACKOFF_SPELL_ID = ABIL_ID_GEN.next()
	
	if compiletime
		let apreset = new AbilityPreset(DUMBACKOFF_SPELL_ID, 'ACfb', 1)
		apreset..setCooldown(1, 0)..setManaCost(1, 0)
		..setMissileArt("")..setHeroAbility(false)..setMissileSpeed(6000) // Done
		
		// Generate def if compieltime
		var spreset = new ChannelAbilityPreset(BACKOFF_SPELL_ID, 4)
		// Set Attributes
		spreset..removeChannelProperties(true)..setName("Back Off")..setButtonPositionNormalX(0)..setButtonPositionNormalY(2)
			..setIcon("BTNWarStomp")..setOption(Option.VISIBLE, true) //Or whatever...
		
		spreset = new ChannelAbilityPreset(SAFEGUARD_SPELL_ID, 4)
		// Set Attributes
		spreset..removeChannelProperties(true)..setName("Safeguard")..setButtonPositionNormalX(1)..setButtonPositionNormalY(2)
			..setIcon("BTNDefend")..setOption(Option.VISIBLE, true)
			..setCastRange(0,400)..setTargetType(Targettype.UTARGET)
			..setTargetsAllowed(0,"allied")
		
		/*let adef = new AbilityDefinitionWarStompcreep(DUMBACKOFF_SPELL_ID)
		adef..setCooldown(1, 0)..setManaCost(1, 0) //Missing presets ehre 
		..setLevels(1)..setAreaofEffect(1, 300) // Done
		*/
		let preset = new HeroPreset(CRUSADER_ID, 'Oshd', "Crusader")
		preset..addProperName("Matija")
			..addHeroAbility(idInteger2IdString(BACKOFF_SPELL_ID))
			..addHeroAbility(idInteger2IdString(SAFEGUARD_SPELL_ID))
		// Build at the end
			..buildHero()
		
		
