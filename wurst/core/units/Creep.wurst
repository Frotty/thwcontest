package Creep
import public Entity
import public PhysicsEntity
import MapStuff
import UnitObjEditing
import HashMap

public enum CreepType
	CREEP
	FLIPPER
	MAMMOTH

HashMap<int, CreepDefinition> creepDefs = new HashMap<int, CreepDefinition>()
string array nameToId
int defcount = 0

public function copyCreepDef(string name) returns CreepDefinition
	for i = 0 to defcount
		if nameToId[i] == name
			return creepDefs.get(i).copy()
	error("No CreepDefinition saved for name: \"" + name + "\"")
	return null

public class Creep extends UnitEntity
	use PhysicsModule
	
	construct(vec3 pos, int id, angle a, vec2 target)
		super(pos, createUnit(CREEP_PLAYER, id, pos, a))
		actor.issuePointOrder("attack", target)
		
	override function update()
		super.update()
		physicsUpdate(this, true)
		
	override function onGround()
		pos += vel
		actor.setXY(pos)
		
		
	override function inAir()
		pos += vel
		actor.setXY(pos)
		actor.setFlyHeight(pos.z-terrainZ,0)
		
	override function onEscapeGround()
		actor.setPropWindow(0)
		
	override function onGroundHit()
		actor.setPropWindow(180)
		pos.z = terrainZ 
		vel.z = 0

public class CreepDefinition
	use PhysicsModule
	boolean generated = false
	int id
	int hp
	int armor
	string modelPath
	string name
	real scale = 0.8
	real collisionSize = 16
	integer movementSpeed = 270
	int damage = 10
	int attackRange = 80
	CreepType ctype //Decides what class will be used for the creep.
	
	construct(string name) //Creates creep with default behaviour
		this.name = name
		nameToId[defcount] = name
		creepDefs.put(defcount, this)
		defcount++
		id = UNIT_ID_GEN.next()
		ctype = CREEP
		
	construct(string name, CreepType ct) //Use this if you want to create creep with advanced behaviour
		this.name = name
		nameToId[defcount] = name
		creepDefs.put(defcount, this)
		defcount++
		id = UNIT_ID_GEN.next()
		ctype = ct
		
	function copy() returns CreepDefinition
		let cd = new CreepDefinition(name)
		cd.hp = hp
		cd.armor = armor
		cd.modelPath = modelPath
		cd.id = UNIT_ID_GEN.next()
		return cd

//	function createCreepEntity(vec3 pos) returns Creep
//		let creep = new T(pos, id)
//		return creep
	
	function generateObject()
		if not generated
			generated = true
			let def = new UnitDefinition(id, 'ugho')
			def..setName(name)..setHitPointsMaximumBase(hp)
			..setDefenseBase(armor)..setModelFile(modelPath)
			..setScalingValue(scale)..setCollisionSize(collisionSize)
			..setAttack1Range(attackRange)..setSpeedBase(movementSpeed)
			..setAttack1DamageBase(damage)..setAttack1DamageNumberofDice(3)..setAttack1DamageSidesperDie(2)
			
	