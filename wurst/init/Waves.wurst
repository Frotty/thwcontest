package Waves
import public WavePool
import WaveManager

/** Creates and returns a list of all Waves */
public function allWaves() returns Queue<WavePool>
	let queue = new Queue<WavePool>()
	// Add the waves from below here
	queue.enqueue(wave_2())
	queue.enqueue(wave_1())
	// Return all waves
	return queue

/** Every Single Wave creates a WavePool and returns it */
public function wave_1() returns WavePool
	// Create the pool
	let pool = new WavePool()
	// Create a CreepDefinition. Use a distinctive Name here for later copies
	var def = new CreepDefinition("Lesser Zombie")
	// Set Values..
	def.hp = 100
	def.modelPath = "units\\creeps\\Zombie\\Zombie.mdl"
	def.scale *=0.8
	def.collisionSize = 8
	// Add Def to pool with amount and time (when to spawn after wave started)
	// Add Spawns chronologically, cause the Pool doesn't get sorted
	// You can implement a sort if you want kari :D
	var def2 = new CreepDefinition("Assault Zombie", CreepType.FLIPPER)
	def2.hp = 30
	def2.modelPath = "units\\creeps\\Sasquatch\\Sasquatch.mdl"
	def2.scale *= 0.7
	def2.collisionSize = 4

	pool.addSpawn(def,10,0,SpawnerGroup.WEST)
	pool.addSpawn(def2,1,0,SpawnerGroup.EAST)
	pool.addSpawn(def,10,10,SpawnerGroup.NORTH)
	
	// Return the pool
	return pool
	
// Copy Example
public function wave_2() returns WavePool
	// Create the pool
	let pool = new WavePool()
	// Copy an existing CreepDef
	// This still creates a new Object (as needed by the system)
	// But reduces codeLength and copy-paste work (readability too)
	var mam = new CreepDefinition("Assault Zombie", CreepType.MAMMOTH)
	mam.hp = 300
	mam.modelPath = "Units\\Creeps\\MammothBlack\\MammothBlack.mdl"
	mam.scale *= 1.2
	mam.collisionSize = 4
	pool.addSpawn(mam, 1, 0, SpawnerGroup.EAST)
	return pool



public function init_Waves(boolean c)
	let waves = allWaves()
	// This Creates the Definitions as well but doesn#t generate the Objects (obviously we can't do this ingame)
	WaveManager.addAllWaves(waves)
	print("added")
	if c
		for w in waves
			print("wave for in ")
			w.generateObjects()

	